<?php

  module_load_include('inc', 'gb_maillist', 'gb_maillist.constants');
  
  /**
   * Implements hook_enable().
   */
  function gb_maillist_enable() {
    //
  }
  
  /**
   * Implements hook_disable().
   */
  function gb_maillist_disable() {
    //
  }
  
  /**
   * Implements hook_install()
   */
  function gb_maillist_install() {
    variable_set('gb_maillist_filter_format', 'full_html');
    variable_set('gb_maillist_email_max_size', 10 * 1024 * 1024); // 10 MB
    
    // Re-build permissions for forum_access
    node_access_rebuild();
  }
 
  /**
   * Implements hook_uninstall()
   */
  function gb_maillist_uninstall() {
    variable_del('gb_maillist_filter_format');
    variable_del('gb_maillist_email_max_size');
    variable_del('gb_maillist_file_scheme');
  }
  
  /**
   * Implements hook_default_permissions()
   */
  function gb_maillist_default_permissions() {
      return array(
      'administer forums' => array(
        'name' => 'administer forums',
        'roles' => array(
          'site_admin' => 'site_admin',
          'communications' => 'communications',
        ),
        'module' => 'forum',
      ),
      'view forums' => array(
        'name' => 'view forums',
        'roles' => array(
          'authenticated_user' => 'authenticated_user'
        ),
        'module' => 'gb_maillist'
      ),
      'send arbitrary files' => array(
        'name' => 'send arbitrary files',
        'roles' => array(
          'authenticated_user' => 'authenticated_user'
        ),
        'module' => 'mimemail'
      ),
    );
  }
  
  /**
   * Implements hook_schema()
   */
  function gb_maillist_schema() {    
    return array(
      'gb_maillist_metadata' => array(
        'description' => t('A table of mailing list metadata for gb_maillist'),
        'fields' => array(
          'tid' => array(
            'description' => t('The tid of the forum this data is bound to'),
            'type' => 'int',
            'not null' => TRUE,
            'unsigned' => TRUE,
          ),
          'list_type' => array(
            'description' => t('The type of list (broadcast or standard)'),
            'type' => 'int',
            'not nulll' => TRUE,
            'size' => 'tiny',
          ),
          'reply_to_type' => array(
            'description' => t('The type of reply-to for a broadcast list'),
            'type' => 'int',
            'not null' => TRUE,
            'size' => 'tiny'
          ),
          'reply_to_email' => array(
            'description' => 
                t('(optional) user-defined e-mail to act as the reply-to'),
            'type' => 'varchar',
            'not null' => FALSE,
            'default' => NULL,
            'length' => _EMAIL_ADDRESS_MAX_LENGTH,
          ),
          'from_email' => array(
            'description' => 
                t('(optional) user-defined e-mail to act as the from e-mail'),
            'type' => 'varchar',
            'not null' => FALSE,
            'default' => NULL,
            'length' => _EMAIL_ADDRESS_MAX_LENGTH,
          ),
        ), // fields
      ), // gb_maillist_metadata
      'gb_maillist_items' => array(
        'description' => t('A table of mailing list items for gb_maillist'),
        'fields' => array(
          'tid' => array(
            'description' => t('The tid of the forum this item is bound to'),
            'type' => 'int',
            'not null' => TRUE,
            'unsigned' => TRUE,
          ),
          'module' => array(
            'description' => t('The module that defines this item'),
            'type' => 'varchar',
            'not nulll' => TRUE,
            'length' => DRUPAL_EXTENSION_NAME_MAX_LENGTH,
          ), 
          'class' => array(
            'description' => t('The storage class the item belongs to'),
            'type' => 'varchar',
            'not null' => TRUE,
            'length' => _VARCHAR_MAX_LENGTH, 
          ),
          'item' => array(
            'description' => t('The item itself'),
            'type' => 'varchar',
            'not null' => TRUE,
            'length' => _VARCHAR_MAX_LENGTH,
          ),
        ), // fields
      ), // gb_maillist_items
      'gb_maillist_blacklist' => array(
        'description' => t('A table of blacklisted e-mails for gb_maillist'),
        'fields' => array(
          'tid' => array(
            'description' => t('The tid of the forum this e-mail is bound to'),
            'type' => 'int',
            'not null' => TRUE,
            'unsigned' => TRUE,
          ),
          'email' => array(
            'description' => t('E-mail address to exclude from the list'),
            'type' => 'varchar',
            'not null' => TRUE,
            'length' => _EMAIL_ADDRESS_MAX_LENGTH,
          ),
        ), // fields
      ), // gb_maillist_blacklist
      'gb_maillist_aliases' => array(
        'description' => t('A table of mailing list aliases for gb_maillist'),
        'fields' => array(
          'tid' => array(
            'description' => t('The tid of the forum this alias is bound to'),
            'type' => 'int',
            'not null' => TRUE,
            'unsigned' => TRUE,
          ),
          'alias' => array(
            'description' => t('An alias used to send e-mail to the list'),
            'type' => 'varchar',
            'not null' => TRUE,
            'length' => _ALIAS_MAX_LENGTH,
          ),
        ), // fields
      ), // gb_maillist_aliases
    ); 
  }

  /**
   * Add the database table {gb_maillist_blacklist}.
   */
  function gb_maillist_update_7100(&$sandbox) {
    $schema = array(
      'gb_maillist_blacklist' => array(
        'description' => t('A table of blacklisted e-mails for gb_maillist'),
        'fields' => array(
          'tid' => array(
            'description' => t('The tid of the forum this e-mail is bound to'),
            'type' => 'int',
            'not null' => TRUE,
            'unsigned' => TRUE,
          ),
          'email' => array(
            'description' => t('E-mail address to exclude from the list'),
            'type' => 'varchar',
            'not null' => TRUE,
            'length' => _EMAIL_ADDRESS_MAX_LENGTH,
          ),
        ), // fields
      ), // gb_maillist_blacklist
    );
    
    db_create_table('gb_maillist_blacklist', $schema['gb_maillist_blacklist']);
  }
  
  /**
   * Add the database table {gb_maillist_aliases}.
   */
  function gb_maillist_update_7101(&$sandbox) {
    $schema = array(
      'gb_maillist_aliases' => array(
        'description' => t('A table of mailing list aliases for gb_maillist'),
        'fields' => array(
          'tid' => array(
            'description' => t('The tid of the forum this alias is bound to'),
            'type' => 'int',
            'not null' => TRUE,
            'unsigned' => TRUE,
          ),
          'alias' => array(
            'description' => t('An alias used to send e-mail to the list'),
            'type' => 'varchar',
            'not null' => TRUE,
            'length' => _ALIAS_MAX_LENGTH,
          ),
        ), // fields
      ), // gb_maillist_aliases
    );
    
    db_create_table('gb_maillist_aliases', $schema['gb_maillist_aliases']);
  }
 
  